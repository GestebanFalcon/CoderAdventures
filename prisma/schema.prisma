datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

model Structure {
    id String @id @default(auto()) @map("_id") @db.ObjectId

    texture  String
    treeType String?

    tile   Tile?   @relation(fields: [tileId], references: [id], onDelete: Cascade)
    tileId String? @unique @db.ObjectId
}

model Entity {
    id String @id @default(auto()) @map("_id") @db.ObjectId

    maxHealth      Int
    texture        String
    tile           Tile?   @relation(fields: [tildId], references: [id], onDelete: Cascade)
    tildId         String? @db.ObjectId
    mainCharacter  Boolean
    startingCoords Int[]
}

model Tile {
    id String @id @default(auto()) @map("_id") @db.ObjectId

    Level   Level?  @relation(fields: [LevelId], references: [id], onDelete: Cascade)
    LevelId String? @db.ObjectId
    index   Int[]
    texture String
    type    String

    entities  Entity[]
    structure Structure?
}

model Level {
    id String @id @default(auto()) @map("_id") @db.ObjectId

    tiles Tile[]

    index         Int
    dimensions    Int[]
    mainCoords    Int[]
    winCon        String
    adventureName String

    @@unique([index, adventureName])
}

model Review {
    id       String   @id @default(auto()) @map("_id") @db.ObjectId
    message  String
    dateTime DateTime @default(now())
}

enum TreeType {
    STRAWBERRY
    OAK
    APPLE
    PEAR
}
